#!/bin/ksh

# Build the list of extensions
#
typeset extentions=""
typeset limitExtensionsArg=""
typeset grepargs
typeset findargs
typeset findLinks
typeset edit=false
typeset editor=emacs
typeset ECHO=""

function DieUsage
{
	print "Usage: $0 [-x ext1] [-x ext2] [-ilvw] words to search for"
	print ""
	print "\tExample: $0 -i -x erb -x rhtml interface"
	print "\twill perform an 'ag ' on all files below the current"
	print "\tdirectory that end in either .erb or .rhtml"
	print "$*"

	exit 1
}

if [ $# -eq 0 ]
then
	DieUsage
fi

# This requires ag, so if it isn't found there is a problem
#
which ag > /dev/null
if [ $? -ne 0 ]
then
	DieUsage "\nError, ag not found, install it via:\n\tbrew install ag"
fi

while getopts "aceFghilmnvwx:" option
do
	case $option in 
		a)
			findLinks="-f"
			;;
		
		c)
			grepargs="$grepargs --color"
			;;
		e)
			edit=true
			
			# Also force it to just list the files
			#            
			grepargs="$grepargs -l"
			;;
		h)
			DieUsage
			;;
		m)
			edit=true
			editor=mate
			
			# Also force it to just list the files
			#
			grepargs="$grepargs -l"
			;;
		n)
			# No-Op, just display the command
			#
			ECHO=echo
			;;
		
		i|l|v|w)
			grepargs="$grepargs -${option}"
			;;
		
		x)
			if [ -n "$extentions" ]
			then
				extentions="$extentions|"
			fi
			extentions="$extentions$OPTARG"
	esac
done

shift $((${OPTIND} - 1)) 

findargs="$findLinks"

if [ -n "$extentions" ]
then
	findargs="$findargs -G .+\\.($extentions)$"
fi

# Don't want to expand the *'s, in case there are matching file names in this
# dir
#
set -o noglob

function doFind
{
	${ECHO} ag $findargs $grepargs "$*"
}

if [ $edit = "true" ]
then
	$editor $(doFind "$*")
else
	doFind $*
fi


exit 0

